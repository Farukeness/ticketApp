@{
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

@(Html.Kendo().Grid<ticketApp.ViewModel.UserGridModel>().Name("UserGrid")
    
    .Columns(columns => {
        columns.Bound(c => c.UserName).Title("İsim");
        columns.Bound(c => c.Email).Title("E Posta").Width(120);
        columns.Bound(c => c.CurrentRole).Title("Rol").EditorTemplateName("RoleDropdown").Width(300).Filterable(f => f.Multi(true).Search(true));
        columns.Command(c => {c.Edit(); c.Destroy();});               
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Filterable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    
    .DataSource(dataSource => dataSource
    .Ajax()
    
    .Model(model => {
        model.Id(p => p.Id);
        model.Field(p => p.UserName);
        model.Field(p => p.Email);
        model.Field(p => p.CurrentRole);
    })
    .Destroy(destroy => destroy.Action("DeleteAdminInline", "Grid"))
    .Read(read => read.Action("Users","Grid"))
    .Update(update => update.Action("UpdateUserRole","Grid"))
    .Create(create => create.Action("UserCreateFromAdmin","Grid"))
    .Events(events => events.RequestEnd("onRequestEnd"))
    )
    )

<script>
function onRequestEnd(e) {
    if (e.type === "update" && e.response) {
        toastr.success("Başarıyla güncellendi!");
    }


    if (e.type === "create" && e.response) {
        toastr.success("Başarıyla Eklendi");
    }
    
}
</script>